apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.module_router.app"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
    }

    signingConfigs {
        //签名配置要在buildtypes之前
        //签名文件放在build.gradle同级目录
        config {
            storeFile file("key.jks")
            storePassword "123456"
            keyAlias 'key'
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            //使用签名
            signingConfig signingConfigs.config
            //混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraint_layout
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.runner
    androidTestImplementation rootProject.ext.dependencies.espresso_core
    implementation project(':lib_common')
    //路由模块
    implementation project(':router_annotation')
    annotationProcessor project(":router_compiler")
    implementation project(':router_go')
    //导入其它业务组件
    if (!isRunAlone.toBoolean()) {
        api project(":lib_chat")
        api project(":lib_home")
    }
}
